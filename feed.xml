<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.1">Jekyll</generator><link href="https://addcnin.blue/feed.xml" rel="self" type="application/atom+xml" /><link href="https://addcnin.blue/" rel="alternate" type="text/html" /><updated>2022-03-12T18:27:46-08:00</updated><id>https://addcnin.blue/feed.xml</id><title type="html">Addison Chan</title><subtitle>Addison Chan | CS &amp; Stats @ UC Berkeley.</subtitle><author><name>@addcninblue</name></author><entry><title type="html">Learning, Learning to Learn, and Teaching</title><link href="https://addcnin.blue/2022/03/12/teaching/" rel="alternate" type="text/html" title="Learning, Learning to Learn, and Teaching" /><published>2022-03-12T00:00:00-08:00</published><updated>2022-03-12T00:00:00-08:00</updated><id>https://addcnin.blue/2022/03/12/teaching</id><content type="html" xml:base="https://addcnin.blue/2022/03/12/teaching/">&lt;p&gt;I’ve taught for several semesters in Berkeley now, and I think it’s high time
I wrote some thoughts down before my knowledge on teaching fades
away.&lt;sup id=&quot;fnref:teaching&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:teaching&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; So here’s a collection of thoughts: we begin with a light
theory of how people acquire knowledge through inquiry, followed by a quick
meta-analysis of learning to learn, ending with teaching.&lt;/p&gt;

&lt;p&gt;I like to view teaching as a way of approximating the learning processes that
people would normally undergo. The key difference is usually either of
convenience or speed; learning is quite arduous, and teaching often eases the
process.&lt;/p&gt;

&lt;p&gt;But through teaching, lots of educators forget what it’s like to be a student.
They lean on prescriptive methods of teaching, leading students to be walking
mirrors of their word. Through this post, I sincerely hope that students and
educators alike will be able to rethink learning and become reflections of
their soul rather than reflections of their teachers.&lt;/p&gt;

&lt;h2 id=&quot;learning&quot;&gt;Learning&lt;/h2&gt;

&lt;p&gt;How do people learn? It all begins when a person asks “why?” and starts seeking
answers for themselves.&lt;sup id=&quot;fnref:babies-why&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:babies-why&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;It’s important to understand why this is successful. First, there’s the
question of motivation. When a person begins questioning the world, it’s their
internal motivation driving them to answer a question. This motivation allows
the individual to dig deeply into their question of choice, possibly uncovering
the truth they initially set out to find, possibly stumbling upon another
question. Regardless of the outcome, however, it’s imperative to note that the
individual’s motives are not due to external factors. Rather, they’re internal,
allowing them to try, retry, and retry again should they run into a wall.&lt;/p&gt;

&lt;p&gt;At the end of the journey to discovery, when all the “Why”s are answered, all
we’re left with is knowledge and satisfaction. It’s incredibly gratifying to be
able to ask a question, start with only a toolbox of inquisition, and to arrive
at some tangible knowledge.&lt;/p&gt;

&lt;p&gt;Importantly, this process highlights a key component of learning: through the
grueling process of hunting down hints and clues that eventually yield the
answers, we implicitly learn about learning. We learn what to do, what not to
do, and how to go about answering similar questions in the future. It’s
somewhat akin to acquiring a new set of tools in our toolbox of inquisition.&lt;/p&gt;

&lt;h2 id=&quot;learning-to-learn&quot;&gt;Learning to Learn&lt;/h2&gt;

&lt;p&gt;Let’s examine this a bit more. If we want to be good teachers, it’s imperative
to understand the mechanism through which we obtain knowledge. Formalizing
the previous section on learning, we have a model that looks like the
following:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Student has initial set of facts, as well as a toolbox of methods they
understand to experiment on the world.&lt;sup id=&quot;fnref:consistency&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:consistency&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt; They ask some motivated
question about the world around them.&lt;/li&gt;
  &lt;li&gt;To answer this question, they initially have a broad hypothesis of how the
world should behave like according to their set of facts. Notably, this
includes the form of their answer, even if misconstrued.&lt;/li&gt;
  &lt;li&gt;They then conduct experiments to verify or challenge their beliefs.&lt;/li&gt;
  &lt;li&gt;Eventually, they will obtain a new set of facts that updates their
understanding of the world. In the process, they might also obtain a new
method of experimentation to add to their toolbox.&lt;/li&gt;
  &lt;li&gt;Repeat from step 1, with the extra knowledge and tools from step 4.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;example-discovering-probability&quot;&gt;Example: “Discovering Probability”&lt;/h3&gt;

&lt;p&gt;Let’s use this framework to imagine what it might be like to rediscover the
memoryless property of coin flips.&lt;/p&gt;

&lt;p&gt;A reasonable (even if wrong) initial set of beliefs about the world might be
something like this:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Beliefs:
    &lt;ul&gt;
      &lt;li&gt;Coins have some fixed chance of landing Heads or Tails. This chance does
  not change between flips.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Toolbox:
    &lt;ul&gt;
      &lt;li&gt;We can flip coins to test the chance of outcomes. (&lt;em&gt;physical&lt;/em&gt;)&lt;/li&gt;
      &lt;li&gt;If we believe strongly that the chance of flipping Heads is fixed, we can
  also simulate this. (&lt;em&gt;computational&lt;/em&gt;)&lt;/li&gt;
      &lt;li&gt;Similarly, if we believe strongly that the chance of flipping Heads is
  fixed, we can mathematically prove this. (&lt;em&gt;proof&lt;/em&gt;) [^proof]&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Initial hypothesis (belief that we want to test):
    &lt;ul&gt;
      &lt;li&gt;Coins are fair, so if we get many Heads in a row, it should start giving
  us Tails.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Assuming that we only have the &lt;em&gt;physical&lt;/em&gt; method available, we can easily test
the memoryless property of coin flips. If our initial hypothesis is true, then
we should expect to see more Heads than Tails after a Tail. However, recording
large number of flips will show us that this isn’t true.&lt;/p&gt;

&lt;p&gt;As a result, we can update our internal beliefs about coin flips.&lt;/p&gt;

&lt;p&gt;A couple of remarks are in order.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;It’s interesting to note that if one holds the belief of coins being
consistent through flips, the memoryless property falls out immediately.
(Formally, conditional independence implies the memoryless property.)&lt;/li&gt;
  &lt;li&gt;However, students will sometimes hold the simultaneous belief that coins are
(1) unchanging through rolls, and yet (2) believe in some kind of “mean
reversion,” or “bias toward the mean on subsequent rolls”. When confronted
with this discrepancy, they’ll often doubt (1) rather than (2), making the
&lt;em&gt;computational&lt;/em&gt; and &lt;em&gt;proof&lt;/em&gt;-based methods unavailable to them.&lt;/li&gt;
  &lt;li&gt;Typically, as we go through this process of testing, we also run into
roadblocks and contradictions. These can be frustrating, but they’re
actually quite critical to learning! Since part of the process is
formulating a hypothesis, it’s important to understand the actual space of
viable hypotheses. Finding counterexamples allow us to understand the
boundaries of the hypothesis space, which in turn allow us to ask better,
more-informed questions.&lt;/li&gt;
  &lt;li&gt;Also, as we go through this process, we often will come up with better ways
of doing things. (As the proverb goes, “necessity is the mother of
invention!”) These discoveries add to our toolbox, adding to step 1 and
accelerating step 3.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;teaching&quot;&gt;Teaching&lt;/h2&gt;

&lt;p&gt;With this model of learning in mind, we turn to teaching. Before we answer the
question of &lt;em&gt;how&lt;/em&gt; we should teach, there’s a more fundamental question that
needs to be answered. Assuming a student is sufficiently self-motivated and
capable, why does teaching even exist? Why isn’t it always better for students
to ask questions, stumble around, and get a solid, fundamental grasp of
everything?&lt;/p&gt;

&lt;p&gt;The answer is largely a question of efficiency. While it’s possible a student
can answer their own questions and discover new things about the world around
them, it simultaneously remains true that there are an infinite number of
“wrong paths” to go down.&lt;/p&gt;

&lt;h3 id=&quot;the-role-of-teaching&quot;&gt;The Role of Teaching&lt;/h3&gt;

&lt;p&gt;So how should we teach? In its purest form, teaching should approximate the
process outlined in &lt;a href=&quot;#learning-to-learn&quot;&gt;Learning to Learn&lt;/a&gt;, with one important
modification: the teacher is given the role of guiding a student through making
&lt;em&gt;insightful&lt;/em&gt; hypotheses and &lt;em&gt;insightful&lt;/em&gt; wrong decisions.&lt;/p&gt;

&lt;p&gt;In particular, this means teaching should never be prescriptive, where a method
is given without rationale and told to be adhered to. All too common, we see
this in public education. In calculus, for example, students are told to “just
differentiate, set to zero, and solve,” and to “check the second derivative
for validity.” According to our framework above, this method is wrong because
it &lt;em&gt;does not approximate learning&lt;/em&gt;! Students cannot be given a result first and
then a hypothesis after, since it’s mentally unclear where this result is
supposed to fit into their framework of reality.&lt;/p&gt;

&lt;p&gt;To fix this, we should rethink teaching by starting from a foundational
motivation. In the Calculus example above, instead of starting from a result,
form a motivating question first: “Suppose a ball were thrown in the air. How
do we calculate its highest point off the ground?” (This example can also be
helped with a graph of the ball at various points describing a parabola.) With
this motivating question, students can then form their own hypotheses and
understand where each possible solution falls short. In the end, it’s ideal for
the instructor to manually describe approaches that break, and then describe
the “valid solution” that students should come to.&lt;/p&gt;

&lt;h3 id=&quot;shortfalls-of-teaching&quot;&gt;Shortfalls of Teaching&lt;/h3&gt;

&lt;p&gt;As with any approximation, there are shortfalls. With teaching, it’s that the
process of error is sometimes completely removed since the process of
constructing bad paths has become artificial.&lt;/p&gt;

&lt;p&gt;Think this is a necessary sacrifice we take in favor of accelerated learning,
within bounds. Many teachers forget the process of motivated learning and
become prescriptive (and they wonder why concepts don’t stick in students’
heads). As educators, we can do a lot better: put yourself in your students’
shoes, rewind your brains to match theirs, and relearn the concepts with them
from a clean slate.&lt;/p&gt;

&lt;h2 id=&quot;footnotes&quot;&gt;Footnotes&lt;/h2&gt;
&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:teaching&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;It’s a pipe dream, but someday I’d love to be a teaching
professor! School seems quite tedious and a PhD seems out of grasp, but who
knows what a few years in industry will do… &lt;a href=&quot;#fnref:teaching&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;⤴&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:babies-why&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;I mean, have you ever talked to a toddler who just learned the
word “why”? Perhaps this is why they acquire knowledge so quickly… &lt;a href=&quot;#fnref:babies-why&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;⤴&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:consistency&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;Actually, we also have to make the assumption that the universe
is consistent and understandable. This seems obvious in our age, but it’s
not a priori clear that the universe should behave the same tomorrow as it
does today. Suffice it to say however that we all take this for granted, so
we don’t have much need to explicitly say this. &lt;a href=&quot;#fnref:consistency&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;⤴&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>@addcninblue</name></author><summary type="html">I’ve taught for several semesters in Berkeley now, and I think it’s high time I wrote some thoughts down before my knowledge on teaching fades away.1 So here’s a collection of thoughts: we begin with a light theory of how people acquire knowledge through inquiry, followed by a quick meta-analysis of learning to learn, ending with teaching. It’s a pipe dream, but someday I’d love to be a teaching ⤴</summary></entry><entry><title type="html">Winter Break Project Review #1: DIY Mechanical Keyboard</title><link href="https://addcnin.blue/2022/01/11/alice-split/" rel="alternate" type="text/html" title="Winter Break Project Review #1: DIY Mechanical Keyboard" /><published>2022-01-11T00:00:00-08:00</published><updated>2022-01-11T00:00:00-08:00</updated><id>https://addcnin.blue/2022/01/11/alice-split</id><content type="html" xml:base="https://addcnin.blue/2022/01/11/alice-split/">&lt;p&gt;My initial motivation to learn Computer Science came from doing side projects.
It was through doing these projects that I realized how little I knew and how
much there was left to learn (and how much there would always be to learn!).
Sometime in the past year, I’ve come to realize that the bulk of my time has
shifted from doing these side projects to laboring away on problem sets. This
is not intrinsically a bad thing! However, as the classes become more and more
advanced, the theory I’m learning has become more and more disconnected from
the practical usefulness I wanted to get out of college. As a result, I’ve been
losing motivation to learn concepts.&lt;/p&gt;

&lt;p&gt;So, one of my goals in senior year is to start doing these side projects again,
with the aim to apply concepts learned in school and to also motivate learning
deeper concepts.&lt;/p&gt;

&lt;p&gt;This winter break, I challenged myself to finish a few things:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Design and create a mechanical keyboard from scratch&lt;/li&gt;
  &lt;li&gt;Create an autotrader for &lt;a href=&quot;https://kalshi.com/&quot;&gt;Kalshi&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Write a &lt;a href=&quot;https://tree-sitter.github.io/tree-sitter/&quot;&gt;Tree-sitter grammar&lt;/a&gt; for &lt;a href=&quot;https://cooklang.org/&quot;&gt;Cooklang&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Develop course content for my &lt;a href=&quot;https://cs198.org/&quot;&gt;new upcoming decal&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As these projects are all nearing their completion, I decided to start
documenting things I learned. This post will be about project #1.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;[Pictures to be added later]&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;project-review&quot;&gt;Project Review&lt;/h2&gt;

&lt;p&gt;I went into this project with the intent of learning the following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;How to do Computer-Aided Design (CAD)&lt;/li&gt;
  &lt;li&gt;How 3D printing works, particularly its limits&lt;/li&gt;
  &lt;li&gt;How to apply EE concepts learned in school to real projects&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;and of course, I wanted a new keyboard! Toward these goals, I think the project
was a huge success. I’ll detail a intro I wish I had for myself, and then go on
to talk about the various tools I used.&lt;/p&gt;

&lt;h2 id=&quot;a-mini-intro-to-myself-a-month-ago&quot;&gt;A Mini Intro to Myself A Month Ago&lt;/h2&gt;

&lt;p&gt;When I first started on this project, it was unclear to me the “build steps”
that would be necessary to go from design to printed product. Does there exist
some unified toolchain, as there often does in software, or would I need to
piece together parts? It turns out the answer for 3D design and printing is the
latter. The steps are roughly as follows:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Create a design in CAD software.&lt;/li&gt;
  &lt;li&gt;Then, export these designs as STL files. To note, STL files are “rendered”
files that essentially ‘meshify’ everything. This means things like rounded
corners are rendered into meshes of triangles. The only way to preserve the
original design’s fidelity is to save the project using your CAD editor’s
file type (which differs by each CAD).&lt;/li&gt;
  &lt;li&gt;After you have a STL, use a
&lt;a href=&quot;https://all3dp.com/1/best-3d-slicer-software-3d-printer/&quot;&gt;slicer&lt;/a&gt; to
convert the 3D model into directions for the printer to follow. These files
should have the extension &lt;code class=&quot;highlighter-rouge&quot;&gt;.gcode&lt;/code&gt;. For my projects, I chose to use
PrusaSlicer.&lt;/li&gt;
  &lt;li&gt;Once the &lt;code class=&quot;highlighter-rouge&quot;&gt;.gcode&lt;/code&gt; is generated, this can be loaded onto the 3D printer and printed!&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The intuition behind each step, in English, is as follows:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;You tell the CAD software what design you want to create.&lt;/li&gt;
  &lt;li&gt;You then tell the CAD software to create a render that roughly approximates
the design you want (&lt;em&gt;approximates&lt;/em&gt; because it’s impossible to draw a fully
round corner in real life).&lt;/li&gt;
  &lt;li&gt;You then use another software (the slicer) to take this rendered design and
generate machine commands that tell the 3D printer what steps you want it to
take (move the nozzle to this coordinate and start spewing plastic).&lt;/li&gt;
  &lt;li&gt;These commands are then loaded onto the 3D printer itself and printed.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;openscad-i-wish-i-knew-this-existed&quot;&gt;Openscad: I Wish I Knew This Existed&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://openscad.org/&quot;&gt;Openscad&lt;/a&gt; was the CAD I used to generate my models. I
chose this since I wanted to try out a programmatic way to generate 3D models,
and since keyboards are parametric by nature. There is a great flowchart that I
used to figure out which software I should use included in the footnotes
&lt;sup id=&quot;fnref:CAD-Choosing&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:CAD-Choosing&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;p&gt;Openscad is a CAD that lets you fully generate models through their programming
language. My non-professional opinion is that it straddles the line somewhere
between “magical” and “cursed”. Let me explain.&lt;/p&gt;

&lt;p&gt;First, its standard library is &lt;a href=&quot;https://openscad.org/cheatsheet/&quot;&gt;quite small&lt;/a&gt;.
This is a two-sided sword: it makes the language quite easy to pick up, but it
also means that common things don’t exist. Things like sums, etc require the
individual to write helper functions. As a result, it seems like most people
actually have their own homebrewed standard libraries that they include in
every project. As I’m writing this, I realized I’ve never bothered to look for
a batteries-included general standard library, and it seems like &lt;a href=&quot;https://openscad.org/libraries.html&quot;&gt;there are
multiple&lt;/a&gt;. (That would’ve been nice to know!)&lt;/p&gt;

&lt;p&gt;But what Openscad does well – it’s a great language to model something if you
know &lt;em&gt;exactly&lt;/em&gt; what you want. The language is pretty intuitive; you just might
need to get creative with the primitives initially to get the hang of it.
Overall, it’s a fantastic way for people who are really familiar with software
to get into the CAD world.&lt;/p&gt;

&lt;p&gt;There are some rough edges outside of its programmatic side. Debugging the 3D
design is a large part of designing something in CAD, and I feel that Openscad
lacks a bit in that regard. Sometimes, trying to figure out why a part doesn’t
render correctly is an exercise in patience, as there’s no easy way to have
Openscad describe &lt;em&gt;why&lt;/em&gt; a shape was rendered the way it was. I gradually
learned to work around this by rendering each part individually, and it seems
more generally that this is what people do – they put in a “Debug Mode” flag
that allows them to see these transformations. I’d love for this to be an
Openscad feature though.&lt;/p&gt;

&lt;h2 id=&quot;3d-printing-a-blessing-and-a-curse&quot;&gt;3D Printing: A Blessing and A Curse&lt;/h2&gt;

&lt;p&gt;I bought an &lt;a href=&quot;https://www.amazon.com/Integrated-Structure-Motherboard-Carborundum-8-66x8-66x9-84in/dp/B07FFTHMMN/&quot;&gt;Ender 3
V2&lt;/a&gt;
to do my 3D printing. Amazon delivery services notwithstanding&lt;sup id=&quot;fnref:Amazon&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:Amazon&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;, this
printer has been a pain to set up and a joy to use.&lt;/p&gt;

&lt;p&gt;Assembling the printer was pretty fast. It came with Ikea-like instructions
that were fairly easy to follow. I’d estimate the process took roughly an
afternoon. However, the process to actually get the first print out was
anything but simple. My lessons boil down to the following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Bed height matters &lt;em&gt;a lot&lt;/em&gt;. If your prints aren’t sticking, there’s a good
chance this is the issue. There’s a great infographic I found post-mortem in
the footnotes&lt;sup id=&quot;fnref:Bed-Leveling&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:Bed-Leveling&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;.&lt;/li&gt;
  &lt;li&gt;On that note, use 9-point leveling if your printer allows for it.
Essentially, it allows you to level your bed at 9 points of accuracy. For the
Ender 3 V2, there’s &lt;a href=&quot;https://github.com/Jyers/Marlin&quot;&gt;Jyers’s Mod&lt;/a&gt; that allows
for this.&lt;/li&gt;
  &lt;li&gt;If your prints &lt;em&gt;still&lt;/em&gt; aren’t sticking, and you’re sure that the bed is
level, check what type of PLA you have and the temperatures the manufacturer
recommends. For a novice, this is non-obvious. I bought a matte ink, and it
turns out the prints weren’t sticking since it required hotter tempertures both
for the extruder and for the bed.&lt;/li&gt;
  &lt;li&gt;Lastly, if your prints &lt;em&gt;still&lt;/em&gt; aren’t sticking, wash your bed with hot water
and dishwasher soap. For some reason, I need to do this before &lt;em&gt;every single
print&lt;/em&gt; for them to stick.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;takeaways&quot;&gt;Takeaways&lt;/h2&gt;

&lt;h3 id=&quot;3d-printing&quot;&gt;3D Printing&lt;/h3&gt;

&lt;p&gt;This process is much slower than I expected. For reference, printing the top
levels of my keyboard took about ~4 hours each on the “draft” setting
(second-to-last in terms of quality). The bases took about ~7 hours each. This
means that 3D printing is good for semi-rapid prototyping, somewhere between
REPL-speeds and sending a print to China. (It still seems faster than FAANG
build tools, to be honest /s).&lt;/p&gt;

&lt;h3 id=&quot;measure-twice-and-cut-once&quot;&gt;Measure Twice and Cut Once&lt;/h3&gt;

&lt;p&gt;As I was juggling several projects over the break, I started printing the
keyboard when I thought it was “about 95% done”. Boy did I realize that was a
mistake! I ended up printing keyboard plates that had keys that were too far
apart, requiring me to print the set again. Furthermore, I failed to properly
consider the placement of the rotary knob, meaning I had to cut out part of the
bottom case to accommodate for the knob. These weren’t catastrophic
project-ending failures, but it definitely caused unnecessary delays.&lt;/p&gt;

&lt;h3 id=&quot;the-right-tools-can-make-all-the-difference&quot;&gt;The Right Tools Can Make All The Difference&lt;/h3&gt;

&lt;p&gt;I initially wired the right hand keyboard with stripped wire I salvaged from my
EE labs. To separate the rows and columns, I figured I could just use some kind
of tape. After all, that’s what the guide I read said to use. Boy was that a
mistake. The tape I used was too thin and ended up tearing, leaving me with
random ghost connections. I ended up biting the bullet and buying &lt;a href=&quot;https://www.amazon.com/gp/product/B088KQFHV7/&quot;&gt;wire from
Amazon&lt;/a&gt;. What a difference that
made! Not only was the wiring cleaner, it was also multiples faster to wire and
debug. Sometimes, blaming the tool is just a scapegoat for bad skill (sports
players, anyone?), but in times like these, having the right tools can make a
world of difference.&lt;/p&gt;

&lt;h2 id=&quot;footnotes&quot;&gt;Footnotes&lt;/h2&gt;
&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:CAD-Choosing&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;&lt;img src=&quot;https://i.redd.it/lvhhiaxuukl41.png&quot; alt=&quot;Model-Making Programs For 3D Printing&quot; /&gt; &lt;a href=&quot;#fnref:CAD-Choosing&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;⤴&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:Amazon&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;They lost this printer in the mail somehow, so I had to cancel my shipment to have them send another one. &lt;a href=&quot;#fnref:Amazon&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;⤴&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:Bed-Leveling&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;&lt;img src=&quot;https://i.imgur.com/tbvOlB9.jpeg&quot; alt=&quot;Bed Leveling&quot; /&gt; &lt;a href=&quot;#fnref:Bed-Leveling&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;⤴&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>@addcninblue</name></author><summary type="html">My initial motivation to learn Computer Science came from doing side projects. It was through doing these projects that I realized how little I knew and how much there was left to learn (and how much there would always be to learn!). Sometime in the past year, I’ve come to realize that the bulk of my time has shifted from doing these side projects to laboring away on problem sets. This is not intrinsically a bad thing! However, as the classes become more and more advanced, the theory I’m learning has become more and more disconnected from the practical usefulness I wanted to get out of college. As a result, I’ve been losing motivation to learn concepts.</summary></entry><entry><title type="html">A Skip, a Hedge, and a Leap of Faith</title><link href="https://addcnin.blue/2021/12/08/full-time-job/" rel="alternate" type="text/html" title="A Skip, a Hedge, and a Leap of Faith" /><published>2021-12-08T00:00:00-08:00</published><updated>2021-12-08T00:00:00-08:00</updated><id>https://addcnin.blue/2021/12/08/full-time-job</id><content type="html" xml:base="https://addcnin.blue/2021/12/08/full-time-job/">&lt;p&gt;“If I may ask, where are you planning to work at full-time? Is it for evil or for good?”&lt;/p&gt;

&lt;p&gt;“Well, it’s not strictly Good, but I don’t suppose it’s &lt;em&gt;that Evil&lt;/em&gt;, per se”&lt;/p&gt;

&lt;p&gt;Laughing, my physics professor responded with, “I respect your answer very much, I do … I had lots of smart friends from college – the brightest of them – who ended up in finance as well.”&lt;/p&gt;

&lt;p&gt;So I suppose I might as well write down some of my thoughts that led to me working in finance, and talk about some meta points while I’m at it.&lt;/p&gt;

&lt;h2 id=&quot;inflation-the-economy-and-speculation&quot;&gt;Inflation, the Economy, and Speculation&lt;/h2&gt;

&lt;p&gt;It seems to me the three following things are true of our current economy:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;High (runaway?) inflation.&lt;/li&gt;
  &lt;li&gt;Loose monetary policy.&lt;/li&gt;
  &lt;li&gt;High speculation across the markets.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;A bit of exposition on each point:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;The government has been handwaving this away, saying it’s “transitory” and a short-term result of the pandemic&lt;sup id=&quot;fnref:transitory-inflation&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:transitory-inflation&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;. I fear that this is a long-term effect that perhaps is one part underestimated by many and another part down-played to prevent panic. After all, price hikes have been through the roof everywhere! A recent &lt;a href=&quot;https://www.federalreserve.gov/econres/feds/files/2021062pap.pdf&quot;&gt;paper by the Fed&lt;/a&gt; has been an interesting read on this point, and highlights the extent to which economists debate about the causes of inflation.&lt;/li&gt;
  &lt;li&gt;This one is non-controversial, assumably, so I won’t go into it much. &lt;a href=&quot;https://www.brookings.edu/research/fed-response-to-covid19/&quot;&gt;Here’s a good summary of actions taken by the government, written by Brookings&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Whether &lt;a href=&quot;https://www.bloomberg.com/opinion/articles/2020-06-09/the-bad-stocks-are-the-most-fun&quot;&gt;boredom-driven&lt;/a&gt;, low-borrow-rate-driven, or &lt;a href=&quot;https://www.wsj.com/articles/inflation-surge-whips-up-market-froth-11636817049&quot;&gt;inflation-driven&lt;/a&gt;, I think it’s safe to say that speculation hasn’t run this hot in a while. This isn’t limited to just equities – cousins such as options and cryptocurrencies have seen wild rides ($GME, anyone?), and even the housing market hasn’t been left untouched. On this point, I’ll go as far as to say that the &lt;a href=&quot;https://news.crunchbase.com/news/global-vc-funding-h1-2021-monthly-recap/&quot;&gt;record level of VC funding&lt;/a&gt; is due to the same effect. Even the &lt;a href=&quot;https://www.federalreserve.gov/publications/files/financial-stability-report-20210506.pdf&quot;&gt;FED says as much&lt;/a&gt;:&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;Valuations for some assets are elevated relative to historical norms even when using measures that account for Treasury yields. In this setting, asset prices may be vulnerable to significant declines should risk appetite fall.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Where does that lead us? I don’t know, but I expect to see a few things. In the short- and medium-term, I expect increased volatility in the markets. We see that the $VIX is still at a bit higher compared to pre-pandemic levels, and we also see that the $VVIX (volatility of the $VIX) is a bit higher as well. I also wouldn’t be surprised to see some kind of meltdown in the markets completely caused by animal spirits, considering that leverage serves to amplify these random effects.&lt;/p&gt;

&lt;h1 id=&quot;recruiting&quot;&gt;Recruiting&lt;/h1&gt;

&lt;p&gt;So this recruiting cycle, I broke down the options I had into these four categories. &lt;sup id=&quot;fnref:1&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Large tech companies&lt;/li&gt;
  &lt;li&gt;Mid-stage / Pre-IPO companies&lt;/li&gt;
  &lt;li&gt;Early-stage startups&lt;/li&gt;
  &lt;li&gt;Trading (Market-making)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;With the dual objectives of growing as a software engineer (in writing code, in being able to self-direct projects, and in being able to directly define and validate product requirements) and of having financial security, I pored over my options.&lt;/p&gt;

&lt;p&gt;Large tech is quite a strong contender - pay is reliable even in a financial downturn, and companies of that scale can have pretty interesting work. However, from my past experience at a FAANG, it seemed just as possible that I’d easily become &lt;em&gt;just another engineer&lt;/em&gt; lost in the books, and my job would be &lt;em&gt;just another pipeline&lt;/em&gt; to make things work. &lt;!-- TODO: wordy --&gt; Furthermore, a lot of these companies are so big that most tools used are developed in-house, meaning I would develop strong skills in tools that no one else uses. That, coupled with the perception of stagnation at a large tech company, ultimately drove me away.&lt;/p&gt;

&lt;p&gt;Midstage tech companies were all the rage a short while ago (in the age of Uber, Lyft, Snowflake, etc.), and appear to be almost as popular as they were (Anyscale, Verkada, etc.). Having considered this route for a while, I can say that the one thing that eventually turned me away was the seeming financial instability of it all. As mentioned above, there’s a record level of VC funding right now, meaning that companies are raising more money and getting higher valuations, and it seems the effects are twofold. First, it means that in an economic downturn, the startup “runway” model of cash-burning would become unviable quickly, and a star startup can easily go under; it seems that this record level of funding has left them in a precarious state. The second effect is that, supposing an asset crash never happens, these companies’ valuations are already so high that the potential upside of some “IPO pop” (or equivalent increased valuation) is dampened. This makes sense by simple economics – low interest rates means that the present value of money is higher, meaning that we discount less for what we anticipate.&lt;/p&gt;

&lt;p&gt;On the early-stage startup front, the analysis is quite similar to midstage startups, with the added bonus of being able to learn a lot in the right setting. &lt;!-- TODO: wordy --&gt; After my past summer’s internship, I’ve come to understand the value of &lt;em&gt;good mentorship&lt;/em&gt;, and I’ve also come to realize that this definitely isn’t a given, especially at a company more focused on its own growth than its employees’ (and rightly so). As a result, I figured early-stage startups would be great later on, but not as a first job.&lt;/p&gt;

&lt;p&gt;And that leaves me with trading.&lt;/p&gt;

&lt;h2 id=&quot;an-aside-on-market-making&quot;&gt;An Aside: On Market Making&lt;/h2&gt;

&lt;p&gt;Before we go into how it answers these dual objectives, perhaps it’s a good idea to address the most common objection I get: the notion that “Wall Street Finance” is just a bunch of rich people trying to take advantage of the small guy. &lt;!-- TODO: wordy --&gt; With the recent $GME saga culminating in the Robinhood ban on trading $GME and the &lt;a href=&quot;https://www.reddit.com/r/wallstreetbets/comments/l747eg/citadel_reloaded_their_shorts_before_they_told/&quot;&gt;subsequent fallout with conspiracy theories of Robinhood and Citadel colluding&lt;/a&gt;&lt;sup id=&quot;fnref:2&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;, I can understand why people are wary of the financial industry as a whole. I, too, was in those shoes half a year ago.&lt;/p&gt;

&lt;p&gt;Through more reading however, it’s become quite apparent that retail doesn’t quite understand the role of market makers. Matt Levine has this fantastic explanation of &lt;a href=&quot;https://www.bloomberg.com/opinion/articles/2021-02-05/robinhood-gamestop-saga-pressures-payment-for-order-flow&quot;&gt;how market making actually works&lt;/a&gt;, and the SEC did this &lt;a href=&quot;https://www.sec.gov/comments/credit-market-interconnectedness/cll10-2.pdf&quot;&gt;interesting investigation&lt;/a&gt; into the role of market makers on keeping liquidity through the COVID-19 crisis. On the whole, market makers aren’t institutions that facilitate things like the $GME wave, nor are they ones who illegally collude with brokers to take the common person’s money. That’s just not their business … usually. There &lt;em&gt;are&lt;/em&gt; cases of &lt;a href=&quot;https://www.sec.gov/files/Market%20Manipulations%20and%20Case%20Studies.pdf&quot;&gt;market manipulations by market makers&lt;/a&gt;, so it’s very much still true that honesty in the markets requires good faith on the part of market makers.&lt;/p&gt;

&lt;p&gt;The question then becomes: Is Optiver a market maker that operates in good faith? After my summer there, I’d say yes, with a caveat. They’ve done quite a bit and more in terms of keeping market structures fair, from &lt;a href=&quot;https://www.optiver.com/2021/08/11/the-us-equity-options-market-is-overdue-for-an-update/&quot;&gt;writing many blog posts on things like PFOF&lt;/a&gt; to working with exchanges themselves to ensure that the exchange/trader boundary is fair (ie. that no algorithmic trader gets an advantage due to poor code).&lt;/p&gt;

&lt;h2 id=&quot;a-skip-a-hedge-and-a-leap-of-faith&quot;&gt;A Skip, a Hedge, and a Leap of Faith&lt;/h2&gt;

&lt;p&gt;So back to how working in finance addresses the two goals above.&lt;/p&gt;

&lt;p&gt;On learning: At Optiver, the tech side functioned similarly to a mid-stage startup. There were no PMs; teams were groups that formed around work that needed to be done (and groups changed as the needs of the company changed.) Individual contributors collaborated with their teams to identify things that needed to be done, but often worked directly with traders and relevant parties to scope out their own work and create the projects. This was quite liberating – it was nice to be able to learn to drive my own projects! Furthermore, Optiver places a large emphasis on writing good code (all new employees have to go through bootcamp and read the “Bible” – “Clean Code” by Robert Martin). On the code I wrote, I received lots of helpful pointers that greatly strengthened the maintainability of my code. Of course, this is all local to the particular company and team – I can’t say this is true of the industry, and based on what I’ve heard, it doesn’t seem to be!&lt;/p&gt;

&lt;p&gt;On financial security: It’s no secret that the trading industry pays well. My hypothesis, however, is that the Efficient Market Hypothesis probably comes into play here – given some skill set, a person probably makes the same regardless of where they go in the long run. For example, I might be sacrificing learning to create at Google-scale by going into finance, and compensated in some other form. Or, perhaps I lose the ability to work from home in exchange for a more fast-paced working environment. Or, perhaps I lose out on golden lottery tickets in startups in exchange for a set bonus structure. Whatever the case, it’s not obvious to me that the trading industry wins outright in this category just based on the compensation numbers.&lt;/p&gt;

&lt;p&gt;The reason the finance industry does win out, though, is due to where I think our economy is headed. To preface this, it should be known that market makers profit most when lots of trading happens&lt;sup id=&quot;fnref:3&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:3&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;4&lt;/a&gt;&lt;/sup&gt;. Then, taking the logical conclusion of the above section on our economy, it’s safe to say that this unstable economical position will lead to a large rebalance in the economy, causing large amounts of trades in the asset market.&lt;/p&gt;

&lt;h2 id=&quot;its-not-all-golden-though&quot;&gt;It’s Not All Golden, Though&lt;/h2&gt;

&lt;p&gt;In the finance industry, one thing is true: Money talks. It’s a double-edged sword: your performance can always be traced back to your delta on the bottom line, and your performance can always be traced back to your delta on the bottom line. It lends itself well to a meritocracy, while losing some of the human aspects. After having worked at some slowly-moving, politics-laden work cultures, I can safely say that this is a tradeoff I’m willing to take, at least for a while.&lt;/p&gt;

&lt;h2 id=&quot;footnotes&quot;&gt;Footnotes&lt;/h2&gt;

&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:transitory-inflation&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;I started writing this blog post in November, before the FED changed their tune. We see with the benefit of hindsight that our prediction was in fact correct, as the FED is accelerating their tapering. &lt;a href=&quot;#fnref:transitory-inflation&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;⤴&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:1&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;I know, it’s probably controversial! If you have thoughts, please email me! &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;⤴&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;To view the tweet, visit &lt;a href=&quot;https://web.archive.org/web/20210128181446/https://twitter.com/justinkan/status/1354853920762253315?s=21&quot;&gt;The Wayback Machine&lt;/a&gt;. &lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;⤴&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:3&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;This is because in making markets, you place quotes where you believe you have an upper hand in the price. To make the more, you’d like more people to trade against you on your quoted price. &lt;a href=&quot;#fnref:3&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;⤴&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>@addcninblue</name></author><summary type="html">“If I may ask, where are you planning to work at full-time? Is it for evil or for good?”</summary></entry><entry><title type="html">Unintuitive Probability: Machine Repairs</title><link href="https://addcnin.blue/2021/12/05/durrett-3-12/" rel="alternate" type="text/html" title="Unintuitive Probability: Machine Repairs" /><published>2021-12-05T00:00:00-08:00</published><updated>2021-12-05T00:00:00-08:00</updated><id>https://addcnin.blue/2021/12/05/durrett-3-12</id><content type="html" xml:base="https://addcnin.blue/2021/12/05/durrett-3-12/">&lt;p&gt;The more classes I take in probability, the more I realize how often my intuition breaks for these problems, &lt;em&gt;especially&lt;/em&gt; when the Exponential distribution is involved. Today I’ll be explaining a homework problem for Stat150 (Stochastic Processes) showcasing unintuitive behavior regarding exponential distributions. Furthermore, I’ll also show a simulation that backs up these results, along with the code used to generate the simulation.&lt;/p&gt;

&lt;h2 id=&quot;problem-statement&quot;&gt;Problem Statement&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/posts/2021-12-05-durrett-3-12/problem.png&quot; alt=&quot;Problem Statement&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;formal-solution&quot;&gt;Formal Solution&lt;/h2&gt;

&lt;p&gt;To solve this, we take advantage of the Rewards Theorem (Theorem 3.3 in Durrett; also &lt;a href=&quot;http://www.columbia.edu/~ks20/4106-18-Fall/Notes-RRT.pdf&quot;&gt;here&lt;/a&gt; for a great explanation). Noting that each characteristic period is the first arrival of either a repair completing (\(\textrm{~ Exp}(\mu)\))or a mistake happening (\(\textrm{~ Exp}(\lambda)\)), the period is then the minimum of the two exponentials, (\(\textrm{~ Exp}(\mu + \lambda)\)). The “reward” here is correctly completing a fix, which can be viewed as an indicator RV that takes \(1\) only on success: \(\mathbb{1}_{t_i = \textrm{repair}}\). Applying the rewards theorem then yields&lt;/p&gt;

\[\frac{\textrm{E}[r_i]}{\textrm{E}[t_i]} = \frac{\textrm{E}[\mathbb{1}_{t_i = \textrm{repair}}]}{\textrm{E}[\textrm{Exp}(\mu + \lambda)]} = \mu\]

&lt;p&gt;This is somewhat unintuitive! It’s saying that the rate at which machines are repaired is &lt;em&gt;independent of the rate at which the worker is making mistakes&lt;/em&gt;!&lt;/p&gt;

&lt;h2 id=&quot;intuitive-solution&quot;&gt;Intuitive Solution&lt;/h2&gt;

&lt;p&gt;Now that we have a mathematical result, let’s try to intuit the cause. Conditioning on a mistake happening at some time \(t^*\), two things happen: the repair and mistake processes begin anew. However, we note that &lt;em&gt;even if the mistake didn’t happen at this time, both processes would have begun anew regardless due to the memoryless property of the exponential distribution&lt;/em&gt;! This result is a bit astounding; to rephrase, due to the memoryless property of the exponential distribution, the worker’s “time until completion” would have restarted at any time \(t^*\) regardless of whether or not a mistake occurred. This directly means that the expected time until completion cannot depend on anything other than \(\mu\), which leads to our solution.&lt;/p&gt;

&lt;h2 id=&quot;simulation-code&quot;&gt;Simulation Code&lt;/h2&gt;

&lt;p&gt;To simulate this result, we generate two random vectors of the exponential distributions. Then, we create the times at which the mistakes are made in &lt;code class=&quot;highlighter-rouge&quot;&gt;mistake_times&lt;/code&gt; (remembering that mistakes happen &lt;em&gt;independently&lt;/em&gt; of repairs). After that, we accumulate times at which the machine is correctly fixed in &lt;code class=&quot;highlighter-rouge&quot;&gt;fix_times&lt;/code&gt;. Taking the successive differences of &lt;code class=&quot;highlighter-rouge&quot;&gt;fix_times&lt;/code&gt; gives the time between fixes, and plotting these values gives us our result.&lt;/p&gt;

&lt;div class=&quot;language-jl highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Distributions&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Plots&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;μ&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;λ&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10000&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Generate random vectors as simulated times&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;μs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rand&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Exponential&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;μ&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;λs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rand&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Exponential&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;λ&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;mistake_times&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cumsum&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;λs&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Times that the machine is actually correctly fixed (ie. before interruption)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fix_times&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;λ_index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;repairtime&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;μs&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;global&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;λ_index&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;repairtime&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mistake_times&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;λ_index&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# no fix&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mistake_times&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;λ_index&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;λ_index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# increment fail index&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# fix&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;repairtime&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;push!&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fix_times&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Construct animation; animate every 5 timesteps&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;diffs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;diff&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fix_times&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;anim&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;@gif&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;diffs&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;÷&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;vals&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;diffs&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;histogram&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vals&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;normalize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;probability&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# y1&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;vline!&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mean&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vals&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)])&lt;/span&gt;                    &lt;span class=&quot;c&quot;&gt;# y2&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;vline!&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;μ&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;])&lt;/span&gt;                             &lt;span class=&quot;c&quot;&gt;# y3&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;simulation-results&quot;&gt;Simulation Results&lt;/h2&gt;

&lt;p&gt;The orange line &lt;code class=&quot;highlighter-rouge&quot;&gt;y2&lt;/code&gt; is the simulated mean, and the green line &lt;code class=&quot;highlighter-rouge&quot;&gt;y3&lt;/code&gt; is the expected mean (from our math above).&lt;/p&gt;

&lt;p&gt;With \(\mu = 1, \lambda = 3\), we get:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/posts/2021-12-05-durrett-3-12/sim.gif&quot; alt=&quot;Simulation&quot; /&gt;&lt;/p&gt;

&lt;p&gt;and see that our simulated results do indeed match the math.&lt;/p&gt;</content><author><name>@addcninblue</name></author><summary type="html">The more classes I take in probability, the more I realize how often my intuition breaks for these problems, especially when the Exponential distribution is involved. Today I’ll be explaining a homework problem for Stat150 (Stochastic Processes) showcasing unintuitive behavior regarding exponential distributions. Furthermore, I’ll also show a simulation that backs up these results, along with the code used to generate the simulation.</summary></entry><entry><title type="html">I’ll Take My Quarterback, Thanks</title><link href="https://addcnin.blue/2021/11/26/a-quarter-of-efficiency/" rel="alternate" type="text/html" title="I’ll Take My Quarterback, Thanks" /><published>2021-11-26T00:00:00-08:00</published><updated>2021-11-26T00:00:00-08:00</updated><id>https://addcnin.blue/2021/11/26/a-quarter-of-efficiency</id><content type="html" xml:base="https://addcnin.blue/2021/11/26/a-quarter-of-efficiency/">&lt;p&gt;Many things in life don’t have a clear estimate at a first glance – many times, 10% will seem like an underestimate, and 100% will seem like an overestimate. In these situations, I’ve learned that it’s actually pretty good to take the geometric mean of the two as a ballpark estimate: ~30%, or roughly something like 1/4 ~ 1/3.&lt;/p&gt;

&lt;p&gt;Let’s take a few examples:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Energy efficiency of humans. Empirically, it doesn’t seem like we convert all our energy from calories into work. (Think about how hot we get after a run!) That must mean that our energy production is less than 100%. However, it doesn’t seem that our energy efficiency is as low as 10% either – that would mean that most of our energy is by far wasted. With these two conditions met, we then ballpark human efficiency as 30%. It turns out that this is empirically true – &lt;a href=&quot;https://dothemath.ucsd.edu/2011/11/mpg-of-a-human/&quot;&gt;humans are about 25% efficient at producing mechanical work&lt;/a&gt;!&lt;/li&gt;
  &lt;li&gt;Energy efficiency of (gasoline) cars. By the same logic above – with all the heat, etc., we can say that roughly the same setup holds for cars for the same reasons it holds for humans. Therefore, we can once again make the claim that cars are ~30% efficient. Once again, this is &lt;a href=&quot;https://www.fueleconomy.gov/feg/atv.shtml&quot;&gt;empirically roughly true&lt;/a&gt;!&lt;/li&gt;
  &lt;li&gt;Food at restaurants. Thinking about the amount of money that actually goes into the ingredients of food at restaurants (as opposed to other factors like labor, rent, etc.), we realize the same setup holds. Due to overhead, restaurant efficiency cannot be 100%; due to food prices, it seems extremely unlikely that restaurant efficiency is only 10%. We once again take 30% as a ballpark estimate. It turns out that this is &lt;a href=&quot;https://www.caminofinancial.com/restaurant-costs/&quot;&gt;fairly accurate&lt;/a&gt; (and as a side note, it seems like employee costs are about the same as well)! I’ve also seen this number noted as low as 20%.&lt;/li&gt;
  &lt;li&gt;As a last example, we know that last week, Stanford lost to Cal in our yearly Big Game (and I know that Cal’s football isn’t great)&lt;sup id=&quot;fnref:1&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;. Well, obviously Stanford can’t be winning all their games, and they are hopefully winning more than 10% of their games (being a private school and whatnot), so we take their winning proportion to be 30%. It turns out their actual standing in PAC-12 North is dead last at 3-8 (overall), which is pretty close to our estimate.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The last tongue-in-cheek example aside, hopefully you’re convinced of the use of this ballpark estimate. Now that we’re armed with this weapon, as we know too well&lt;sup id=&quot;fnref:2&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;, it’s a lot more interesting to find places where wielding it gives us invalid results:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Berkeley tuition: Sourced through internal means, we’ve gathered that around ~$100 is spent on classes per student-unit on teaching staff. This translates to ~$400 for a 4-unit class, or $1600 for the standard 16 unit schedule. Accounting for $150 for instructor salary ($150k for 1k students, as per 61A standards), we get ~$2200 per semester in money spent towards teaching staff. In-state tuition is $9k / semester, as I checked on CalCentral, so we do end up getting a value of $2.2k / $9k = ~25% efficiency. Fantastic!&lt;/p&gt;

    &lt;p&gt;Now we consider out-of-state students, who pay ~25k per semester. This is $2.2k / $25k ~= 10% efficient. Where is all the money going? I unfortunately don’t have an answer. What I do have, though, is a dire situation on hand: Somehow, the EECS department doesn’t have enough money to staff their classes next semester, even running at a subpar efficiency. I’m &lt;em&gt;very curious&lt;/em&gt; as to what’s up!&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Writing code: In Clean Code, Martin asserts that &lt;a href=&quot;https://www.goodreads.com/quotes/835238-indeed-the-ratio-of-time-spent-reading-versus-writing-is&quot;&gt;the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code&lt;/a&gt;. Taking this at face value, it definitely doesn’t satisfy the 1/3 ~ 1/4 rule. Based on my limited experience in industry (as a senior at the time of writing), this doesn’t seem empirically true? I’ve spent perhaps a third of my time reviewing other code and getting a hold of my bearings, and the other two thirds producing. It’s perhaps the case that these ratios switch as software engineers become mentors, but I’m curious here as well to understand what’s up!&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In closing, this rule of thumb is quite similar to the &lt;a href=&quot;https://en.wikipedia.org/wiki/Pareto_principle&quot;&gt;Pareto Principle&lt;/a&gt;. Perhaps it’s getting at the same underlying cause! I find, however, that the 1/3 ~ 1/4 rule of thumb has been more helpful to me thus far, and I hope you took something out of this as well.&lt;/p&gt;

&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;I had actually begun writing this blogpost &lt;em&gt;before&lt;/em&gt; the big game, and the title of the post came full circle to fit the post! &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;⤴&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;Oak’s words echoed… “There’s a time and place for everything but not now!” &lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;⤴&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>@addcninblue</name></author><summary type="html">Many things in life don’t have a clear estimate at a first glance – many times, 10% will seem like an underestimate, and 100% will seem like an overestimate. In these situations, I’ve learned that it’s actually pretty good to take the geometric mean of the two as a ballpark estimate: ~30%, or roughly something like 1/4 ~ 1/3.</summary></entry><entry><title type="html">Remarkable + Tailscale</title><link href="https://addcnin.blue/2021/10/26/remarkable-tailscale/" rel="alternate" type="text/html" title="Remarkable + Tailscale" /><published>2021-10-26T00:00:00-07:00</published><updated>2021-10-26T00:00:00-07:00</updated><id>https://addcnin.blue/2021/10/26/remarkable-tailscale</id><content type="html" xml:base="https://addcnin.blue/2021/10/26/remarkable-tailscale/">&lt;h2 id=&quot;background&quot;&gt;Background&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://tailscale.com/&quot;&gt;Tailscale&lt;/a&gt; is a pretty cool technology that allows devices to access each other across any network by automatically punching holes through networks. (Long gone are the days of &lt;code class=&quot;highlighter-rouge&quot;&gt;ssh -L 8000:localhost:8000 server&lt;/code&gt; to do development! Now we can just go to &lt;code class=&quot;highlighter-rouge&quot;&gt;http://server:8000&lt;/code&gt; directly!) Its setup process is fairly simple for both Windows and Linux, but it doesn’t have detailed solutions for embedded devices (such as the Remarkable). This blogpost details the steps I took to get Tailscale working on my Remarkable.&lt;/p&gt;

&lt;h2 id=&quot;prerequisites&quot;&gt;Prerequisites&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;You will need &lt;a href=&quot;https://github.com/Evidlo/remarkable_entware&quot;&gt;entware&lt;/a&gt; installed. This has the &lt;code class=&quot;highlighter-rouge&quot;&gt;tailscale&lt;/code&gt; package.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;steps&quot;&gt;Steps&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Install &lt;code class=&quot;highlighter-rouge&quot;&gt;tailscale&lt;/code&gt; from &lt;code class=&quot;highlighter-rouge&quot;&gt;entware&lt;/code&gt;:&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;opkg install tailscale&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;For the first time we run &lt;code class=&quot;highlighter-rouge&quot;&gt;tailscale&lt;/code&gt;, we need to do it manually to set up authentication. In two separate terminals, run:
    &lt;ol&gt;
      &lt;li&gt;
        &lt;p&gt;Tailscale daemon. (Note that &lt;code class=&quot;highlighter-rouge&quot;&gt;--tun=userspace-networking&lt;/code&gt; is necessary! The Remarkable kernel &lt;em&gt;does not&lt;/em&gt; contain the proper modules to kernel-space networking.)&lt;/p&gt;

        &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;tailscaled --tun=userspace-networking&lt;/code&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Tailscale client. This will give you a link. Follow the instructions to authenticate&lt;/p&gt;

        &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;tailscale up&lt;/code&gt;&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Now, we set up a systemd unit to automatically start and run &lt;code class=&quot;highlighter-rouge&quot;&gt;tailscaled&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;tailscale up&lt;/code&gt; on boot. Copy and paste the following into a new file at &lt;code class=&quot;highlighter-rouge&quot;&gt;/lib/systemd/system/tailscaled.service&lt;/code&gt;.&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; [Unit]
 After=network.target
 Description=Tailscale client daemon
 StartLimitBurst=0
 StartLimitIntervalSec=0
 Wants=network.target

 [Service]
 Environment=&quot;HOME=/home/root&quot;
 ExecStart=/opt/bin/tailscaled --tun=userspace-networking
 ExecStartPost=/opt/bin/tailscale up
 Restart=on-failure
 RestartSec=5

 [Install]
 WantedBy=multi-user.target
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Now, install the service:&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;systemctl enable tailscaled&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Reboot. We reboot here since I ran into some strange issues with &lt;code class=&quot;highlighter-rouge&quot;&gt;tailscaled&lt;/code&gt; not stopping itself, and restarting is the fastest way around this.&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;shutdown -r now&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;And use &lt;code class=&quot;highlighter-rouge&quot;&gt;journalctl&lt;/code&gt; to monitor the status:&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;journalctl -f -u tailscaled&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Now &lt;code class=&quot;highlighter-rouge&quot;&gt;tailscale&lt;/code&gt; should be working!&lt;/li&gt;
&lt;/ol&gt;</content><author><name>@addcninblue</name></author><summary type="html">Background Tailscale is a pretty cool technology that allows devices to access each other across any network by automatically punching holes through networks. (Long gone are the days of ssh -L 8000:localhost:8000 server to do development! Now we can just go to http://server:8000 directly!) Its setup process is fairly simple for both Windows and Linux, but it doesn’t have detailed solutions for embedded devices (such as the Remarkable). This blogpost details the steps I took to get Tailscale working on my Remarkable.</summary></entry><entry><title type="html">Blogs I Read</title><link href="https://addcnin.blue/2021/10/20/blogs/" rel="alternate" type="text/html" title="Blogs I Read" /><published>2021-10-20T00:00:00-07:00</published><updated>2021-10-20T00:00:00-07:00</updated><id>https://addcnin.blue/2021/10/20/blogs</id><content type="html" xml:base="https://addcnin.blue/2021/10/20/blogs/">&lt;p&gt;(and podcasts I listen to)&lt;/p&gt;

&lt;p&gt;I often find myself sharing this (very) short list of media I love, so here’s a compiled list. It’s ranked in rough order of how valuable I’ve found the content. Hopefully it helps someone!&lt;/p&gt;

&lt;h2 id=&quot;on-software-and-adjacent-industries&quot;&gt;On Software And Adjacent Industries&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.paulgraham.com/articles.html&quot;&gt;Paul Graham&lt;/a&gt;: From the founder of YCombinator, a solid collection of essays on startups and life.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://danluu.com/&quot;&gt;Dan Luu&lt;/a&gt;: A very-well written set of essays on startups, curious explorations into the world of computers, and learning.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://thinkingelixir.com/the-podcast/&quot;&gt;Thinking Elixir&lt;/a&gt;: An Elixir podcast that talks about Elixir’s most recent developments.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;on-finance&quot;&gt;On Finance&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.bloomberg.com/opinion/authors/ARbTQlRLRjE/matthew-s-levine&quot;&gt;Money Stuff&lt;/a&gt;: Written by a former financial engineer at Goldman, a daily blog on the latest in how “everything is securities fraud.”&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.wsj.com/podcasts/bad-bets&quot;&gt;Bad Bets&lt;/a&gt;: A new podcast by WSJ on “big-business dramas that have had a big impact on our world.” It seems particularly relevant especially considering the recent frothiness of the markets.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.ft.com/ft-news-briefing&quot;&gt;FT News Briefing&lt;/a&gt;: A daily (~10 min) podcast by FT highlighting daily news.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.wsj.com/podcasts/the-journal&quot;&gt;The Journal&lt;/a&gt;: A daily podcast by WSJ diving into relevant recent news, mainly focused on “money, business and power.”&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;one-off-blogs&quot;&gt;One-off Blogs&lt;/h2&gt;
&lt;p&gt;(These are ordered arbitrarily.)&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://waitbutwhy.com/2018/04/picking-career.html&quot;&gt;How to Pick a Career (That Actually Fits You)&lt;/a&gt;: Very long article that gets to who we are as people.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://alumni.media.mit.edu/~cahn/life/gian-carlo-rota-10-lessons.html&quot;&gt;Ten Lessons I wish I had been Taught&lt;/a&gt;: Short but hilarious blog, especially relevant for those pursuing an advanced degree.&lt;/li&gt;
&lt;/ul&gt;</content><author><name>@addcninblue</name></author><summary type="html">(and podcasts I listen to)</summary></entry><entry><title type="html">Installing Windows Alongside Existing NixOS</title><link href="https://addcnin.blue/2020/07/11/dual-boot/" rel="alternate" type="text/html" title="Installing Windows Alongside Existing NixOS" /><published>2020-07-11T00:00:00-07:00</published><updated>2020-07-11T00:00:00-07:00</updated><id>https://addcnin.blue/2020/07/11/dual-boot</id><content type="html" xml:base="https://addcnin.blue/2020/07/11/dual-boot/">&lt;h2 id=&quot;background&quot;&gt;Background&lt;/h2&gt;
&lt;p&gt;I use NixOS as my main OS in everything (from personal laptop to my server), but I was beginning to miss Windows for gaming. (WINE won’t cut it here.) As a result, I went searching for installing Windows alongside an existing NixOS installation, but I couldn’t find one anywhere. I decided to just dive in, and it worked! Here is a high-level list of the steps I took. For reference, I am installing this on an XPS 9550, with EFI.&lt;/p&gt;

&lt;p&gt;Before continuing on, you will need a live USB stick that has the NixOS installation media.&lt;/p&gt;

&lt;h2 id=&quot;steps&quot;&gt;Steps&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;Change the boot method from the default systemd-boot bootloader to GRUB. This will allow us to add Windows to the boot menu in the future. &lt;a href=&quot;https://nixos.wiki/wiki/Dual_Booting_NixOS_and_Windows#Grub_2&quot;&gt;Here are the steps.&lt;/a&gt; For now, leave out the entire &lt;code class=&quot;highlighter-rouge&quot;&gt;extraEntries&lt;/code&gt; line – we’ll add that later.&lt;/li&gt;
  &lt;li&gt;If you need to resize NixOS:
    &lt;ol&gt;
      &lt;li&gt;Boot into the live USB stick.&lt;/li&gt;
      &lt;li&gt;Over-downsize your filesystem: &lt;code class=&quot;highlighter-rouge&quot;&gt;resize2fs /dev/sdXY $something_smaller_than_new_size&lt;/code&gt;, where the size we input is something smaller than the final size of our partition we want.&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://wiki.archlinux.org/index.php/Parted#Shrinking_partitions&quot;&gt;Shrink the actual partition:&lt;/a&gt;. Note that we first overshoot our shrink for the filesystem and then fit it back. This is to ensure that our partition doesn’t cut off our filesystem, which can lead to data loss.
        &lt;ol&gt;
          &lt;li&gt;Start parted: &lt;code class=&quot;highlighter-rouge&quot;&gt;parted --align optimal /dev/sdX&lt;/code&gt;&lt;/li&gt;
          &lt;li&gt;List out partitions: &lt;code class=&quot;highlighter-rouge&quot;&gt;(parted) print&lt;/code&gt;&lt;/li&gt;
          &lt;li&gt;Shrink the right partition: &lt;code class=&quot;highlighter-rouge&quot;&gt;(parted) resizepart number end&lt;/code&gt;&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
      &lt;li&gt;Grow the filesystem to fill the entire space of the partition: &lt;code class=&quot;highlighter-rouge&quot;&gt;resize2fs /dev/sdXY&lt;/code&gt;&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;Install Windows. This is actually pretty simple; in the installer, simply click on the unallocated space to install Windows, and it’ll just work. &lt;em&gt;magic!&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;Now, your computer should be booting directly into Windows. We have to reinstall GRUB as the bootloader to fix that:
    &lt;ol&gt;
      &lt;li&gt;Boot into the live USB stick.&lt;/li&gt;
      &lt;li&gt;Mount your NixOS system onto &lt;code class=&quot;highlighter-rouge&quot;&gt;/mnt&lt;/code&gt;. If you followed the &lt;a href=&quot;https://nixos.org/nixos/manual/index.html#sec-installation-installing&quot;&gt;instruction manual&lt;/a&gt;, then it would look like this:
        &lt;ol&gt;
          &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mount /dev/disk/by-label/nixos /mnt/&lt;/code&gt;&lt;/li&gt;
          &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mount /dev/disk/by-label/boot /mnt/boot&lt;/code&gt;&lt;/li&gt;
          &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;swapon /dev/disk/by-label/swap&lt;/code&gt;&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
      &lt;li&gt;Add all of your &lt;code class=&quot;highlighter-rouge&quot;&gt;nix-channel&lt;/code&gt;s that you currently use in your OS with &lt;code class=&quot;highlighter-rouge&quot;&gt;nix-channel --add ...&lt;/code&gt;. If you forgot, you can &lt;a href=&quot;https://nixos.wiki/wiki/Change_root&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;nixos-enter&lt;/code&gt;&lt;/a&gt; into your installation to check via &lt;code class=&quot;highlighter-rouge&quot;&gt;nix-channel --list&lt;/code&gt;.&lt;/li&gt;
      &lt;li&gt;Grab the UUID of boot partition via &lt;code class=&quot;highlighter-rouge&quot;&gt;blkid&lt;/code&gt;, and &lt;a href=&quot;https://nixos.wiki/wiki/Dual_Booting_NixOS_and_Windows#Grub_2&quot;&gt;add that in to the GRUB section of your &lt;code class=&quot;highlighter-rouge&quot;&gt;configuration.nix&lt;/code&gt;&lt;/a&gt;. It should be located at &lt;code class=&quot;highlighter-rouge&quot;&gt;/mnt/etc/nixos/configuration.nix&lt;/code&gt;. This is the part where we add Windows into GRUB.&lt;/li&gt;
      &lt;li&gt;Rederive NixOS: &lt;code class=&quot;highlighter-rouge&quot;&gt;nixos-install&lt;/code&gt;.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;And then you should be done!&lt;/p&gt;

&lt;h2 id=&quot;things-i-tried-that-failed&quot;&gt;Things I Tried That Failed&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Live booting the Nixos ISO, and trying to chroot into that environment to &lt;code class=&quot;highlighter-rouge&quot;&gt;nixos-rebuild switch&lt;/code&gt;. This failed due to some strange error about being unable to write to the filesystem.&lt;/li&gt;
  &lt;li&gt;Live booting from Ubuntu to try to rebuild grub there. This failed because it requires either a chroot or directly specifying the EFI directory, and the chroot fails because Nixos doesn’t have a /bin/bash, and the EFI directory approach failed for some unknown reason.&lt;/li&gt;
&lt;/ul&gt;</content><author><name>@addcninblue</name></author><summary type="html">Background I use NixOS as my main OS in everything (from personal laptop to my server), but I was beginning to miss Windows for gaming. (WINE won’t cut it here.) As a result, I went searching for installing Windows alongside an existing NixOS installation, but I couldn’t find one anywhere. I decided to just dive in, and it worked! Here is a high-level list of the steps I took. For reference, I am installing this on an XPS 9550, with EFI.</summary></entry><entry><title type="html">Homelab: Part 2</title><link href="https://addcnin.blue/2020/05/03/homelab-2/" rel="alternate" type="text/html" title="Homelab: Part 2" /><published>2020-05-03T00:00:00-07:00</published><updated>2020-05-03T00:00:00-07:00</updated><id>https://addcnin.blue/2020/05/03/homelab-2</id><content type="html" xml:base="https://addcnin.blue/2020/05/03/homelab-2/">&lt;p&gt;The hard drives finally came, so in this post, I’ll be documenting RAID (mdadm) and LVM (with lvmcache). I have a Samsung 970 EVO NVMe SSD which already has 3 partitions in this order: boot, root, swap (without LVM). In this post, we will be adding 4x 3TB Seagate Barracuda drives in RAID10 with mdadm, and with LVM top. We will then move the root partition to the RAID10 array.&lt;/p&gt;

&lt;p&gt;For the reader:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;The SSD is at &lt;code class=&quot;highlighter-rouge&quot;&gt;/dev/nvme0n1&lt;/code&gt;. Partitions are like this: &lt;code class=&quot;highlighter-rouge&quot;&gt;/dev/nvme0n1p1&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;The hard drives are at &lt;code class=&quot;highlighter-rouge&quot;&gt;/dev/sd{a,b,c,d}&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;See my &lt;a href=&quot;/2020/04/13/homelab/&quot;&gt;previous post&lt;/a&gt; for more background information.&lt;/p&gt;

&lt;h2 id=&quot;architectural-concerns&quot;&gt;Architectural Concerns&lt;/h2&gt;
&lt;p&gt;Here, we build a RAID array, then build LVM on top. While LVM itself implements RAID, it seems that there is not as much documentation as compared to mdadm’s, so I went with this approach. For the caching layer, I originally considered &lt;a href=&quot;https://bcache.evilpiepirate.org/&quot;&gt;bcache&lt;/a&gt;. However, it is recommended to put LVM on top of bcache, and since I ended up moving the data to the RAID array first, it was very annoying to have to move data again, so I chose to go with lvmcache.&lt;/p&gt;

&lt;h2 id=&quot;mdadm-first&quot;&gt;MDADM First&lt;/h2&gt;
&lt;p&gt;Creating a RAID array was straightforward. I followed the instructions over at &lt;a href=&quot;https://www.digitalocean.com/community/tutorials/how-to-create-raid-arrays-with-mdadm-on-ubuntu-16-04#creating-a-raid-0-array&quot;&gt;DigitalOcean&lt;/a&gt;, substituting in &lt;code class=&quot;highlighter-rouge&quot;&gt;10&lt;/code&gt; for &lt;code class=&quot;highlighter-rouge&quot;&gt;0&lt;/code&gt;: &lt;code class=&quot;highlighter-rouge&quot;&gt;mdadm --create --verbose /dev/md0 --level=10 --raid-devices=4 /dev/sda /dev/sdb /dev/sdc /dev/sdd&lt;/code&gt;. It should be noted that once the RAID array is created, the &lt;em&gt;entire array&lt;/em&gt; is exposed to the operating system as &lt;em&gt;one drive&lt;/em&gt;. Here, we created it as &lt;code class=&quot;highlighter-rouge&quot;&gt;/dev/md0&lt;/code&gt;, so we will be using that drive.&lt;/p&gt;

&lt;h2 id=&quot;lvm&quot;&gt;LVM&lt;/h2&gt;
&lt;p&gt;References: &lt;a href=&quot;https://wiki.archlinux.org/index.php/Install_Arch_Linux_on_LVM&quot;&gt;Install Arch Linux on LVM&lt;/a&gt;, &lt;a href=&quot;https://wiki.archlinux.org/index.php/LVM&quot;&gt;Arch Linux LVM Wiki&lt;/a&gt;. I would recommend reading through “Install Arch Linux on LVM”, as it goes through the steps of setting up a drive on LVM. Read up to the parts where they actually install the OS.&lt;/p&gt;

&lt;p&gt;Now, we set up the array for LVM:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Create the physical volume: &lt;code class=&quot;highlighter-rouge&quot;&gt;pvcreate /dev/md0&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Create the volume group: &lt;code class=&quot;highlighter-rouge&quot;&gt;vgcreate VolGroup00 /dev/md0&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Create logical volume. Here we make a volume that fills up the entire disk, as is my usecase: &lt;code class=&quot;highlighter-rouge&quot;&gt;lvcreate -l 100%FREE VolGroup00 -n lvolroot&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Then, we copy over the data from the SSD:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bs&lt;/code&gt; represents block copy size; 300M is a good number for my usecase. &lt;code class=&quot;highlighter-rouge&quot;&gt;status=progress&lt;/code&gt; shows our copy progress: &lt;code class=&quot;highlighter-rouge&quot;&gt;dd if=/dev/nvme0n1p2 of=/dev/VolGroup00/lvolroot bs=300M status=progress&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;At this point, modify &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/fstab&lt;/code&gt; to mount &lt;code class=&quot;highlighter-rouge&quot;&gt;/dev/VolGroup00/lvolroot&lt;/code&gt; as the root partition. You may need to enable extra kernel modules for LVM. Try to boot from this partition to ensure that everything is fine, since we will be deleting the original root partition. When booting with the new partition, use &lt;code class=&quot;highlighter-rouge&quot;&gt;lsblk&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;df -h&lt;/code&gt; to ensure that the root drive is mounted at the new location, and that the old partition is no longer used. After this point, there &lt;em&gt;will&lt;/em&gt; be data loss if the copy failed.&lt;/p&gt;

&lt;p&gt;After we verify that the partition has been correctly copied over, we convert the original SSD to be a cache. There is a very good article &lt;a href=&quot;https://storageapis.wordpress.com/2015/03/20/bcache-and-vs-lvm-cache/&quot;&gt;here&lt;/a&gt; about bcache and lvmcache. The instructions for lvmcache are good, but the final few steps didn’t work for me. A brief read-through is recommended to understand how lvmcache works. Arch wiki also has a &lt;a href=&quot;https://wiki.archlinux.org/index.php/LVM#LVM_cache&quot;&gt;concise article&lt;/a&gt;. (In this step, if there are issues with lvm commands, it is likely that kernel modules need to be loaded. I used &lt;a href=&quot;https://github.com/NixOS/nixpkgs/issues/15516#issuecomment-388575593&quot;&gt;this patch&lt;/a&gt;, double checking existing &lt;code class=&quot;highlighter-rouge&quot;&gt;boot.initrd.availableKernelModulesboot.initrd.availableKernelModules&lt;/code&gt; to make sure they weren’t overriden by using &lt;code class=&quot;highlighter-rouge&quot;&gt;nixos-option boot.initrd.availableKernelModules&lt;/code&gt;)&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Extend our current volume group to take up the space of the old SSD root partition: &lt;code class=&quot;highlighter-rouge&quot;&gt;vgextend VolGroup00 /dev/nvme0n1p2&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Now, we create a cache pool and use it as the caching layer of our new root partition, all in one step. I chose to use a writeback cache since I can sustain small write losses in the case the SSD fails, and given that it’s so new, I don’t expect it to fail anytime soon (knocking on wood): &lt;code class=&quot;highlighter-rouge&quot;&gt;lvcreate --type cache --cachemode writeback -l 100%FREE -n cache /dev/VolGroup00/lvolroot /dev/nvme0n1p2&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Reboot, and we’re done!&lt;/p&gt;

&lt;h2 id=&quot;screenshots&quot;&gt;Screenshots&lt;/h2&gt;
&lt;p&gt;Look at the space!
&lt;img src=&quot;/assets/posts/homelab/lsblk.png&quot; alt=&quot;lsblk&quot; /&gt;&lt;/p&gt;</content><author><name>@addcninblue</name></author><summary type="html">The hard drives finally came, so in this post, I’ll be documenting RAID (mdadm) and LVM (with lvmcache). I have a Samsung 970 EVO NVMe SSD which already has 3 partitions in this order: boot, root, swap (without LVM). In this post, we will be adding 4x 3TB Seagate Barracuda drives in RAID10 with mdadm, and with LVM top. We will then move the root partition to the RAID10 array.</summary></entry><entry><title type="html">Covid-19 and Game Theory</title><link href="https://addcnin.blue/2020/04/16/game-theory-covid-19/" rel="alternate" type="text/html" title="Covid-19 and Game Theory" /><published>2020-04-16T00:00:00-07:00</published><updated>2020-04-16T00:00:00-07:00</updated><id>https://addcnin.blue/2020/04/16/game-theory-covid-19</id><content type="html" xml:base="https://addcnin.blue/2020/04/16/game-theory-covid-19/">&lt;p&gt;With the Coronavirus, tissue paper and supplies are flying out of stores. Some argue that it’s a natural human reaction best explained by Game Theory. In this essay, I will explore these claims, as well as how several countries have responded differently, and how their policies can be explained by Game Theory.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;N.B.: This post was originally the essay for one of my Stat 155 assignments. I thought it interesting enough to share on my blog – I hope you enjoy it!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;articles-referenced-and-their-claims&quot;&gt;Articles Referenced and Their Claims&lt;/h2&gt;
&lt;p&gt;In The Herald&lt;sup id=&quot;fnref:The-Herald&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:The-Herald&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;, the Adam Smith Institute&lt;sup id=&quot;fnref:Adam-Smith-Institute&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:Adam-Smith-Institute&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;, and Asia Times&lt;sup id=&quot;fnref:Asia-Times&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:Asia-Times&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;, the authors argue that the situation is well-explained by Prisoners’ Dilemma. In The Herald, McArdle makes the additional claim that Western countries have a lack of trust that Eastern countries do not have, exacerbating the Prisoners’ Dilemma problem. Macdonald of the Adam Smith Institute makes a particularly astute economic observation that “raising prices in our current context is not a cynical cash grab, but an effective means of restoring consumer confidence and ensuring we can all access the goods we need during these strange and difficult times”.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;A minor charge can be compared to temporary economic and material disruption. That would have been the sole significant setback had corporations cooperated. In this case the entire economic machinery would have toned down and shrunk, and thus everyone would have been affected more or less the same.&lt;/p&gt;

  &lt;p&gt;The problem, however, arises when some parties betray the faith. From a single corporation’s or businessman’s point of view, if they stay faithful, and other parties do not adhere to the bargain, they fall back in the competition. The disadvantage sustained could very plausibly be insurmountable, akin to one prisoner walking off free while the other suffers a massive loss.&lt;/p&gt;

  &lt;p&gt;– Kaushik, Asia Times&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In &lt;a href=&quot;https://medium.com/@vivfang/coronavirus-game-6fdf4d4d4007&quot;&gt;an article published on Medium&lt;/a&gt;, Fang tackles a popular post floating on Facebook claiming to explain the Coronavirus in terms of Game Theory by arguing that the explanation was flawed due to a wrong application of said theory. Fang then reproduces the game, this time with her own chart. Noticeably, the chart, reproduced below, has a Nash Equilibrium that is Pareto Efficient!
&lt;img src=&quot;/assets/posts/2020-04-16-game-theory-covid-19/medium-article-chart.png&quot; alt=&quot;Medium Article Chart&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;prisoners-dilemma&quot;&gt;Prisoners’ Dilemma&lt;/h2&gt;
&lt;p&gt;But are we as humans really stuck in a game of Prisoners’ Dilemma? Seeing that several Asian countries, and Taiwan in particular, have no issues with hoarding, we must either settle for the conclusion that humans are fundamentally different across the East and the West, as McArdle claims, or that there is some other factor at play &lt;em&gt;impacting the setup of the game itself&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;In the situation where the setup of the games are the same, where both the East and West are facing Prisoners’ Dilemmas, the lack of shortages in the East would mean that the people are cooperating. While plausible, these differences must necessarily be attributed to a difference in culture, meaning that scarcity would manifest differently across the United States. Seeing that communities everywhere see shortages, there must be some other explanation.&lt;/p&gt;

&lt;p&gt;Suppose for a moment that supplies are not scarce; ie. no matter how much toilet paper one buys, another will not be impacted. Denote the payoff of hoarding to be \(-5\) due to diminishing returns, and the payoff of not hoarding to be \(0\).&lt;/p&gt;

\[\begin{bmatrix}
P1 \textrm{\\} P2&amp;amp; \textrm{hoard} &amp;amp; \textrm{don't hoard} \\
\textrm{hoard}       &amp;amp; (-5, -5) &amp;amp; (-5, 0) \\
\textrm{don't hoard} &amp;amp; (0, -5)  &amp;amp; (0, 0) \\
\end{bmatrix}\]

&lt;p&gt;In this setup, we immediately see that the Prisoners’ Dilemma problem has disappeared – \(\textrm{(don't hoard, don't hoard)}\) is the Nash Equilibrium &lt;em&gt;and the Pareto Optimum&lt;/em&gt;, meaning that with a lack of resources, there is no incentive for anyone to hoard resources! This makes sense – why hoard knowing that resources will always be available when you need it?&lt;/p&gt;

&lt;h2 id=&quot;response-to-the-coronavirus&quot;&gt;Response to the Coronavirus&lt;/h2&gt;
&lt;p&gt;Let us take a step back and view responses to the coronavirus; in particular, we compare Taiwan’s&lt;sup id=&quot;fnref:wikipedia-taiwan&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:wikipedia-taiwan&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;4&lt;/a&gt;&lt;/sup&gt; approach to the United States’&lt;sup id=&quot;fnref:wikipedia-usa&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:wikipedia-usa&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;5&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;p&gt;On December 31st, 2019, both the United States and Taiwan learned about the cases in China. On that same day, Taiwan started inspecting inbound flights from Wuhan, while the United States waited until much much later. Mask rationing was implemented on February 6th, with the Taiwanese Armed Forces deployed to aid the scaling of mask production in factories. In the United States, people were recommended to not wear masks, claiming that their efficacy was unproven and limited. In the third week of February, medical experts “concluded that the United States had already lost the fight to contain the virus”.[^nytimes-red-dawn] Contrasting this is the efforts of Taiwan, who as of today only have a mere 395 cases (fewer than my county!) and are exporting face masks!&lt;/p&gt;

&lt;p&gt;Arguments as to why Taiwan and other countries’ responses have been so quick are varied, including the fact that they have seen SARS, a similar virus and situation, but one thing is clear: their people have much less to fear when they know that containment is quite evident and adequate. This effectively reduces their situation to the lack of shortage situation discussed earlier, since they can depend on supply chains not shutting down because of adequate preparation.&lt;/p&gt;

&lt;h2 id=&quot;facing-the-shortages&quot;&gt;Facing the Shortages&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;But are people acting irrationally? At a collective level, it is leading to shortages of goods. But in a direct sense, people are acting rationally. It becomes optimal rather than suboptimal to start stockpiling if everyone else does because their stockpiling creates the very supply problem they are trying to avoid in the first place.&lt;/p&gt;

  &lt;p&gt;– Macdonald, Adam Smith Institute&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I was an intended Economics major prior to switching to Statistics. Macdonald’s claim piqued my interest, so let’s examine them through a statistical lens.&lt;/p&gt;

&lt;p&gt;In the situation where market values are not restricted, we have the following payoff diagram: In the case where people both do not hoard, there is no change from the status quo, so the payoff to both is 0. In the case where one hoards and the other doesn’t, one gains and the other loses. In the case where both hoard, there is a small loss to both (since there is a loss of accessible resources in the case either need them). This is classical Prisoners’ Dilemma:&lt;/p&gt;

\[\begin{bmatrix}
P1 \textrm{\\} P2&amp;amp; \textrm{hoard} &amp;amp; \textrm{don't hoard} \\
\textrm{hoard}       &amp;amp; (-2, -2) &amp;amp; (3, -3) \\
\textrm{don't hoard} &amp;amp; (-3, 3)  &amp;amp; (0, 0) \\
\end{bmatrix}\]

&lt;p&gt;Now, suppose there is a price floor imposed on the market, equivalent to the total marginal utility gained through hoarding beyond the original market equilibrium. The scenario is the same, with one changed parameter: hoarding is more expensive now, incurring a loss of \(-3\). We define a new field, \(\textrm{hoard less}\), describing a situation where hoarding is in effect, but with less quantity. Assuming that both people have a price-elastic response&lt;sup id=&quot;fnref:price-elasticity&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:price-elasticity&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;6&lt;/a&gt;&lt;/sup&gt;:&lt;/p&gt;

\[\begin{bmatrix}
P1 \textrm{\\} P2&amp;amp; \textrm{hoard} &amp;amp; \textrm{don't hoard} \\
\textrm{hoard}       &amp;amp; (-5, -5) &amp;amp; (0, -3) \\
\textrm{don't hoard} &amp;amp; (-3, 0)  &amp;amp; (0, 0) \\
\end{bmatrix}\]

&lt;p&gt;Immediately, we see that we have recovered a situation with the Nash Equilibrium equal to the Pareto Equilibrium equal to not hoarding for both. In other words, the market price floor has a positive effect in this scenario.&lt;/p&gt;

&lt;h2 id=&quot;footnotes&quot;&gt;Footnotes&lt;/h2&gt;

&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:The-Herald&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;https://www.heraldscotland.com/news/18314703.helen-mcardle-game-theory-tells-us-britains-reaction-coronavirus/ &lt;a href=&quot;#fnref:The-Herald&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;⤴&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:Adam-Smith-Institute&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;https://www.adamsmith.org/blog/covid-19-and-game-theory &lt;a href=&quot;#fnref:Adam-Smith-Institute&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;⤴&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:Asia-Times&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;https://asiatimes.com/2020/03/covid-19-and-the-prisoners-dilemma/ &lt;a href=&quot;#fnref:Asia-Times&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;⤴&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:wikipedia-taiwan&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;https://en.wikipedia.org/wiki/2020_coronavirus_pandemic_in_Taiwan &lt;a href=&quot;#fnref:wikipedia-taiwan&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;⤴&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:wikipedia-usa&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;https://en.wikipedia.org/wiki/Timeline_of_the_2020_coronavirus_pandemic_in_the_United_States &lt;a href=&quot;#fnref:wikipedia-usa&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;⤴&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:price-elasticity&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;Here, I make a key assumption that price elasticity of hoarded goods are elastic beyond their basic consumption. The author of the Adam Smith Institute article, Macdonald, has observed anecdotally that his experience supports this conclusion. &lt;a href=&quot;#fnref:price-elasticity&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;⤴&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>@addcninblue</name></author><summary type="html">With the Coronavirus, tissue paper and supplies are flying out of stores. Some argue that it’s a natural human reaction best explained by Game Theory. In this essay, I will explore these claims, as well as how several countries have responded differently, and how their policies can be explained by Game Theory.</summary></entry></feed>